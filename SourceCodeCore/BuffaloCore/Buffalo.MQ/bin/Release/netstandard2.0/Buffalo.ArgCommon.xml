<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Buffalo.ArgCommon</name>
    </assembly>
    <members>
        <member name="T:Buffalo.ArgCommon.ApiCommon">
            <summary>
            WebAPI返回帮助类
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.ApiCommon.GetArgs(System.String)">
            <summary>
            获取参数
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ApiCommon.GetSuccess(System.String,System.Object)">
            <summary>
            获取成功的返回值
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ApiCommon.GetFault(System.String,System.Object)">
            <summary>
            获取失败的返回值
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ApiCommon.GetException(System.Exception)">
            <summary>
            获取失败的返回值
            </summary>
            <param name="message"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Buffalo.ArgCommon.ApiCommon.GetTimeout(System.String)" -->
        <member name="M:Buffalo.ArgCommon.ApiCommon.XmlToDictionary``1(System.Xml.XmlDocument)">
            <summary>
            XML转成字典
            </summary>
            <typeparam name="T"></typeparam>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ApiCommon.NewXmlDocument">
            <summary>
            新建一个XML文档
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ApiCommon.XmlToList``1(System.Xml.XmlDocument)">
            <summary>
            XML转成字典
            </summary>
            <typeparam name="T"></typeparam>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="T:Buffalo.ArgCommon.APIResault">
            <summary>
            API返回值
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.DataAsString">
            <summary>
            统一转换成字符串
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.Resault">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.Setting">
            <summary>
            转换模式
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.Formatting">
            <summary>
            格式
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.APIResault._type">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.Type">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.IsSuccess">
            <summary>
            调用是否成功
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.ApiException">
            <summary>
            异常
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.GetValue``1">
            <summary>
            获取值[Data]
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:Buffalo.ArgCommon.APIResault._excludeProperties">
            <summary>
            显示或屏蔽属性的方式
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.APIResault.ExcludeProperties">
            <summary>
            显示或屏蔽属性的方式
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetValue(System.Object)">
            <summary>
            设置内容值
            </summary>
            <param name="data">内容</param>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.#ctor">
            <summary>
            API返回值
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.GetResault(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromFormatting(Newtonsoft.Json.Formatting)">
            <summary>
            设置格式并返回本实例
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromSettings(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            设置转换模式并返回本实例
            </summary>
            <param name="setting">模式</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromExcludeProperties(Buffalo.ArgCommon.ExcludePropertiesContractResolver)">
            <summary>
            设置属性显示或屏蔽方式，并返回本实例
            </summary>
            <param name="excludeProperty">显示或屏蔽开关</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromShowProperty(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            设置显示的属性并返回本实例
            </summary>
            <param name="showProperty">显示的属性</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromIgnoreProperty(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            设置忽略的属性并返回本实例
            </summary>
            <param name="ignoreProperty">忽略的属性</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromDataToString">
            <summary>
            转换时候把非字符串的data值打成json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.FromDataToString(System.Boolean)">
            <summary>
            转换时候把非字符串的data值打成json字符串
            </summary>
            <param name="toString">是否转换成字符串</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.ToJson">
            <summary>
            序列化成Json
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.ToJsonShow(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            只显示Data某些属性序列化成Json
            </summary>
            <param name="showProperty">只显示属性集合</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.ToJsonIgnore(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            忽略Data某些属性序列化成Json
            </summary>
            <param name="ignoreProperty">忽略属性集合</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.ToObject">
            <summary>
            序列化成Json
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetSuccess(System.String,System.Object)">
            <summary>
            状态设置为成功
            </summary>
            <param name="message">信息</param>
            <param name="data">返回值内容</param>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetSuccess">
            <summary>
            状态设置为成功
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetFault(System.String,System.Object)">
            <summary>
            状态设置为一般错误
            </summary>
            <param name="message">消息</param>
            <param name="data">内容</param>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetFault(System.String)">
            <summary>
            状态设置为一般错误
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetFault">
            <summary>
            状态设置为一般错误
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetTimeout(System.String,System.Object)">
            <summary>
            设置超时错误
            </summary>
            <param name="message">消息</param>
            <param name="data">内容</param>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetTimeout">
            <summary>
            设置超时错误
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetException(System.Exception)">
            <summary>
            设置异常
            </summary>
            <param name="ex">异常值</param>
        </member>
        <member name="M:Buffalo.ArgCommon.APIResault.SetJson(System.String)">
            <summary>
            设置json
            </summary>
            <param name="json">json</param>
        </member>
        <member name="T:Buffalo.ArgCommon.JsonParseType">
            <summary>
            Json转换开关
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.JsonParseType.Show">
            <summary>
            显示列表中的属性
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.JsonParseType.Ignore">
            <summary>
            跳过列表中的属性
            </summary>
        </member>
        <member name="T:Buffalo.ArgCommon.ArgValues">
            <summary>
            参数信息
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.ArgValues.Token">
            <summary>
            会话码
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.ArgValues.GetObject(System.String)">
            <summary>
            获取信息
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ArgValues.GetDataValue``1">
            <summary>
            获取信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ArgValues.GetDataValue``1(System.String)">
            <summary>
            获取信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Buffalo.ArgCommon.ArgValues.GetDataValue``1(System.String,``0)">
            <summary>
            获取信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Buffalo.ArgCommon.ExcludePropertiesContractResolver">
            <summary>
            显示和屏蔽信息开关
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.ExcludePropertiesContractResolver.ShowType">
            <summary>
            显示或屏蔽,true时候是只显示ExcludeProperties，false时候则为屏蔽ExcludeProperties
            </summary>
        </member>
        <member name="P:Buffalo.ArgCommon.ExcludePropertiesContractResolver.ExcludeProperties">
            <summary>
            要处理的属性
            </summary>
        </member>
        <member name="M:Buffalo.ArgCommon.ExcludePropertiesContractResolver.#ctor(System.Collections.Generic.IEnumerable{System.String},Buffalo.ArgCommon.JsonParseType)">
            <summary>
            属性过滤
            </summary>
            <param name="excludedProperties">属性集合</param>
            <param name="showType">显示或屏蔽,Show时候是只显示ExcludeProperties，Ignore时候则为屏蔽ExcludeProperties</param>
        </member>
        <member name="M:Buffalo.ArgCommon.ExcludePropertiesContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            内部处理接口，返回要显示的属性
            </summary>
            <param name="type"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="F:Buffalo.ArgCommon.ResaultType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.ResaultType.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.ResaultType.Fault">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.ResaultType.Exception">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:Buffalo.ArgCommon.ResaultType.Timeout">
            <summary>
            会话过期
            </summary>
        </member>
        <member name="M:JsonValueConvertExtend.ConvertJsonValue``1(System.Object)">
            <summary>
            把Json的object类型转成指定类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:JsonValueConvertExtend.ConvertJsonValue``1(System.Object,``0)">
            <summary>
            把Json的object类型转成指定类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">值</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JsonValueConvertExtend.ConvertJsonTo``1(System.Object,``0)">
            <summary>
            转换Json对象到指定类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">值</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:JsonValueConvertExtend.ConvertJsonTo``1(System.Object)">
            <summary>
            转换Json对象到指定类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">值</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
    </members>
</doc>
